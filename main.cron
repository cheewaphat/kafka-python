#!/bin/bash
. ${HOME}/.bash_profile
# set fileformat=unix
# Redirect stdout ( > ) into a named pipe ( >() ) running "tee"

PATH_LOG="/tmp/workspace/kafka-python/"
mkdir -p "${PATH_LOG%/}"
exec > >(tee -i ${PATH_LOG%/}/`basename $0`-`date +"%Y%m%d"`.log)
exec 2>&1

PID=$$
CURR_DIR="$( cd "$( dirname "${0}" )" && pwd )"
CURR_USER="$(whoami)"


function init()
{
    kinit -k -t "${KEY_TAB}" "cisetl1b@SAMBA-TEST.TH"

    mkdir -p "${PATH_LOG}"
    mkdir -p "${PATH_TMP}"

    # hadoop fs -mkdir -p "${PATH_HDFS_TMP}"

    echo "`date '+%Y-%m-%d %H:%M:%S'` SUB PATH_SCHEMA : $PATH_SCHEMA"
    echo "`date '+%Y-%m-%d %H:%M:%S'` SUB PATH_LOG : $PATH_LOG"
    echo "`date '+%Y-%m-%d %H:%M:%S'` SUB PATH_TMP : $PATH_TMP"
    echo "`date '+%Y-%m-%d %H:%M:%S'` SUB PATH_HDFS_TMP : $PATH_HDFS_TMP"
}


function call_sub()
{
    local _sourcepath=$1
    local _table=$2
    local _tmpout="${PATH_TMP%/}/found-${_table,,}-$PID.out"
    ls "${_sourcepath%/}" | egrep "${_table}_[0-9]{1}_[0-9]{8}.*CTRL" > "$_tmpout"
    echo ""
    echo "`date '+%Y-%m-%d %H:%M:%S'` lookup $_table in $_sourcepath"    
    echo "`date '+%Y-%m-%d %H:%M:%S'` found `wc -l "$_tmpout"`"

    while IFS='' read -r line || [[ -n "$line" ]]; do
    # find "${_sourcepath%/}" -name "${_table}" | while read line ; do
        filename=$(basename "$line")        
        extension="${filename##*.}"
        filename="${filename%.*}"    
        
        table="table"
        cmd="${CURR_DIR%/}/sub.bash ${_table,,} ${_sourcepath%/}/$filename"

        #check process
        if [ `ps -ef | grep "$cmd" | grep -v grep|  wc -l` -ne 0 ] ;then 
            echo "`date '+%Y-%m-%d %H:%M:%S'` Process is still running , $cmd"
            continue 
        fi

        # partition_date="01011970"   #DDMMYY
        # [[ $filename =~ [[:digit:]]{8} ]] && {       
        #     partition_date=${BASH_REMATCH[0]}        
        #     echo "`date '+%Y-%m-%d %H:%M:%S'` Found $partition_date in filename $filename"
        # }        
        
        if [[ -f "${_sourcepath%/}/$filename" ]] && [[ "$filename" =~ [[:digit:]]{8} ]] ; then            
            eval "$cmd &" 
            pid=$!
            echo "`date '+%Y-%m-%d %H:%M:%S'` Call :PID:$pid:$cmd"
            sleep 1
        else 
            echo "`date '+%Y-%m-%d %H:%M:%S'` file format invalide"
        fi
        
    done < "$_tmpout"

}

function remove_archive()
{
    find "${PATH_ARCHIVE%/}/" -type f -atime +7 -exec rm -f {} \; -print
}


#===================== MAIN =====================#
init
tables=("House_Brand_Configs" "House_Brand_Devices_Logs" "House_Brand_History_Locations" "House_Brand_ID" )
for fname in "${tables[@]}" ;do   
   call_sub "${SRC_MAYA%/}" "${fname}"
done
clear
remove_archive

exit 0